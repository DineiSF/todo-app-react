{"ast":null,"code":"var _jsxFileName = \"/home/dinei/Projects/github/ToDO/todo-app-react/src/components/Todo.js\";\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nfunction Todo({\n  todos,\n  completeTodo,\n  removeTodo\n}) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  return todos.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: todo.id,\n    onClick: () => completeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, todo.text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RiCloseCircleLine, {\n    onClick: () => removeTodo(todo.id),\n    className: \"delete-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TiEdit, {\n    onClick: () => setEdit({\n      id: todo.id,\n      value: todo.text\n    }),\n    className: \"edit-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/dinei/Projects/github/ToDO/todo-app-react/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","edit","setEdit","id","value","map","todo","index","isComplete","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAAd,EAAmD;AAC/C,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBT,QAAQ,CAAC;AAC/BU,IAAAA,EAAE,EAAE,IAD2B;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAAD,CAAlC;AAKA,SAAON,KAAK,CAACO,GAAN,CAAU,CAAEC,IAAF,EAAQC,KAAR,kBACb;AACI,IAAA,SAAS,EAAKD,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UAD1D;AAEI,IAAA,GAAG,EAAKD,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIQ;AAAK,IAAA,GAAG,EAAKD,IAAI,CAACH,EAAlB;AAAuB,IAAA,OAAO,EAAK,MAAMJ,YAAY,CAACO,IAAI,CAACH,EAAN,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMG,IAAI,CAACG,IADX,CAJR,eAOQ;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AACA,IAAA,OAAO,EAAS,MAAMT,UAAU,CAAEM,IAAI,CAACH,EAAP,CADhC;AAEA,IAAA,SAAS,EAAK,aAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI,oBAAC,MAAD;AACA,IAAA,OAAO,EAAS,MAAMD,OAAO,CAAC;AAAEC,MAAAA,EAAE,EAAEG,IAAI,CAACH,EAAX;AAAeC,MAAAA,KAAK,EAAEE,IAAI,CAACG;AAA3B,KAAD,CAD7B;AAEA,IAAA,SAAS,EAAK,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAPR,CADG,CAAP;AAsBH;;AAED,eAAeZ,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nfunction Todo({ todos, completeTodo, removeTodo }) {\n    const [ edit, setEdit ] = useState({\n        id: null, \n        value: ''\n    });\n\n    return todos.map(( todo, index ) => (\n        <div \n            className = { todo.isComplete ? 'todo-row complete' : 'todo-row' } \n            key = { index }\n        >\n                <div key = { todo.id } onClick = { () => completeTodo(todo.id) }>\n                    { todo.text }\n                </div>\n                <div className = \"icons\">\n                    <RiCloseCircleLine \n                    onClick     = { () => removeTodo( todo.id ) }\n                    className   = 'delete-icon'\n                    />\n                    <TiEdit\n                    onClick     = { () => setEdit({ id: todo.id, value: todo.text } ) }\n                    className   = 'edit-icon'\n                    />\n                </div>\n\n            \n        </div>\n    ));\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}