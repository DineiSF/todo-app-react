{"ast":null,"code":"var _jsxFileName = \"/home/dinei/Projects/github/ToDO/todo-app-react/src/components/TodoList.js\";\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    ;\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.maps(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"ToDo list!\"), /*#__PURE__*/React.createElement(TodoForm, {\n    onSubmit: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Todo, {\n    todos: todos,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    updateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/home/dinei/Projects/github/ToDO/todo-app-react/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removeArr","filter","completeTodo","updatedTodos","maps","isComplete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMM,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAcF,IAAI,CAACC,IAAnB,CAAlB,EAA8C;AAC1C;AACH;;AAED,UAAME,QAAQ,GAAG,CAAEH,IAAF,EAAQ,GAAGH,KAAX,CAAjB;AAEAC,IAAAA,QAAQ,CAAEK,QAAF,CAAR;AACH,GARD;;AAUA,QAAMC,UAAU,GAAG,CAAEC,MAAF,EAAUC,QAAV,KAAwB;AACvC,QAAI,CAACA,QAAQ,CAACL,IAAV,IAAkB,QAAQC,IAAR,CAAcI,QAAQ,CAACL,IAAvB,CAAtB,EAAsD;AAClD;AACH;;AAAA;AAEDH,IAAAA,QAAQ,CAAES,IAAI,IAAIA,IAAI,CAACC,GAAL,CAAUC,IAAI,IAAMA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAApD,CAAV,CAAR;AACH,GAND;;AAQA,QAAME,UAAU,GAAGD,EAAE,IAAI;AACrB,UAAME,SAAS,GAAG,CAAE,GAAGf,KAAL,EAAagB,MAAb,CAAqBb,IAAI,IAAIA,IAAI,CAACU,EAAL,KAAYA,EAAzC,CAAlB;AAEAZ,IAAAA,QAAQ,CAACc,SAAD,CAAR;AACH,GAJD;;AAMA,QAAME,YAAY,GAAGJ,EAAE,IAAI;AACvB,QAAIK,YAAY,GAAGlB,KAAK,CAACmB,IAAN,CAAYhB,IAAI,IAAI;AACnC,UAAKA,IAAI,CAACU,EAAL,KAAYA,EAAjB,EAAsB;AAClBV,QAAAA,IAAI,CAACiB,UAAL,GAAkB,CAACjB,IAAI,CAACiB,UAAxB;AACH;;AACD,aAAOjB,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACiB,YAAD,CAAR;AACH,GARD;;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,QAAD;AAAY,IAAA,QAAQ,EAAKhB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,IAAD;AAAY,IAAA,KAAK,EAAQF,KAAzB;AAAiC,IAAA,YAAY,EAAKiB,YAAlD;AAAiE,IAAA,UAAU,EAAKH,UAAhF;AAA6F,IAAA,UAAU,EAAKP,UAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;AAED,eAAeR,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n    const [ todos, setTodos ] = useState([]);\n\n    const addTodo = todo => {\n        if( !todo.text || /^\\s*$/.test( todo.text ) ) {\n            return;\n        }\n\n        const newTodos = [ todo, ...todos ];\n\n        setTodos( newTodos );\n    };\n\n    const updateTodo = ( todoId, newValue ) => {\n        if( !newValue.text || /^\\s*$/.test( newValue.text ) ) {\n            return;\n        };\n\n        setTodos( prev => prev.map( item => ( item.id === todoId ? newValue : item )));\n    };\n\n    const removeTodo = id => {\n        const removeArr = [ ...todos ].filter( todo => todo.id !== id )\n\n        setTodos(removeArr);\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.maps( todo => {\n            if ( todo.id === id ) {\n                todo.isComplete = !todo.isComplete\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    }\n\n    return (\n        <div>\n            <h1>ToDo list!</h1>\n            <TodoForm   onSubmit = { addTodo } />\n            <Todo       todos    = { todos } completeTodo = { completeTodo } removeTodo = { removeTodo } updateTodo = { updateTodo }/>\n        </div>\n    );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}